CMAKE_MINIMUM_REQUIRED(VERSION 3.7.2)
PROJECT(raxvt C CXX)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/modules")

INCLUDE(CheckCXXCompilerFlag)
INCLUDE(CheckIncludeFiles)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckSymbolExists)
INCLUDE(CheckStructHasMember)
INCLUDE(FindPkgConfig)

CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)

IF(COMPILER_SUPPORTS_CXX11)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
ELSEIF(COMPILER_SUPPORTS_CXX0X)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
ELSE()
  MESSAGE(FATAL_ERROR "Compiler ${CMAKE_CXX_COMPILER} has no C++11 support.")
ENDIF()

OPTION(XFT "Define to enable XFT support" ON)
OPTION(XRENDER "Define to enable XRENDER support" ON)
OPTION(UTMP_SUPPORT "Define if you want to have utmp/tmpx support" ON)
OPTION(WTMP_SUPPORT "Define if you want to have wtmp support when utmp/utmpx is enabled" ON)

IF(XFT)
  PKG_CHECK_MODULES(XFT REQUIRED xft)
  PKG_CHECK_MODULES(FONTCONFIG REQUIRED fontconfig)
ENDIF()
IF(XRENDER)
  PKG_CHECK_MODULES(XRENDER REQUIRED xrender)
ENDIF()

PKG_CHECK_MODULES(X11 REQUIRED x11)
PKG_CHECK_MODULES(GDKPIXBUF gdk-pixbuf-2.0)
PKG_CHECK_MODULES(STARTUP_NOTIFICATION libstartup-notification-1.0)
IF(GDKPIXBUF_FOUND)
  SET(HAVE_PIXBUF true)
ENDIF()
IF(STARTUP_NOTIFICATION_FOUND)
  SET(HAVE_STARTUP_NOTIFICATION true)
ENDIF()

CHECK_INCLUDE_FILES(X11/Xft/Xft.h HAVE_X11_XFT_XFT_H)
CHECK_INCLUDE_FILES(inttypes.h HAVE_INTTYPES_H)
CHECK_INCLUDE_FILES(lastlog.h HAVE_LASTLOG_H)
CHECK_INCLUDE_FILES(libutil.h HAVE_LIBUTIL_H)
CHECK_INCLUDE_FILES(memory.h HAVE_MEMORY_H)
CHECK_INCLUDE_FILES(poll.h HAVE_POLL_H)
CHECK_INCLUDE_FILES(port.h HAVE_PORT_H)
CHECK_INCLUDE_FILES(pty.h HAVE_PTY_H)
CHECK_INCLUDE_FILES(stdint.h HAVE_STDINT_H)
CHECK_INCLUDE_FILES(stdlib.h HAVE_STDLIB_H)
CHECK_INCLUDE_FILES(string.h HAVE_STRING_H)
CHECK_INCLUDE_FILES(strings.h HAVE_STRINGS_H)
CHECK_INCLUDE_FILES(stropts.h HAVE_STROPTS_H)
CHECK_INCLUDE_FILES(sys/byteorder.h HAVE_SYS_BYTEORDER_H)
CHECK_INCLUDE_FILES(sys/epoll.h HAVE_SYS_EPOLL_H)
CHECK_INCLUDE_FILES(sys/event.h HAVE_SYS_EVENT_H)
CHECK_INCLUDE_FILES(sys/eventfd.h HAVE_SYS_EVENTFD_H)
CHECK_INCLUDE_FILES(sys/inotify.h HAVE_SYS_INOTIFY_H)
CHECK_INCLUDE_FILES(sys/ioctl.h HAVE_SYS_IOCTL_H)
CHECK_INCLUDE_FILES(sys/select.h HAVE_SYS_SELECT_H)
CHECK_INCLUDE_FILES(sys/signalfd.h HAVE_SYS_SIGNALFD_H)
CHECK_INCLUDE_FILES(sys/sockio.h HAVE_SYS_SOCKIO_H)
CHECK_INCLUDE_FILES(sys/stat.h HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILES(sys/strredir.h HAVE_SYS_STRREDIR_H)
CHECK_INCLUDE_FILES(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILES(unistd.h HAVE_UNISTD_H)
CHECK_INCLUDE_FILES(util.h HAVE_UTIL_H)
CHECK_INCLUDE_FILES(utmp.h HAVE_UTMP_H)
CHECK_INCLUDE_FILES(utmpx.h HAVE_UTMPX_H)
CHECK_INCLUDE_FILES(wchar.h HAVE_WCHAR_H)

CHECK_FUNCTION_EXISTS(FcPatternGet HAVE_FCPATTERNGET)
CHECK_FUNCTION_EXISTS(XftDrawString32 HAVE_XFTDRAWSTRING32)
CHECK_FUNCTION_EXISTS(_getpty HAVE__GETPTY)
CHECK_FUNCTION_EXISTS(clock_gettime HAVE_CLOCK_GETTIME)
CHECK_FUNCTION_EXISTS(epoll_ctl HAVE_EPOLL_CTL)
CHECK_FUNCTION_EXISTS(eventfd HAVE_EVENTFD)
CHECK_FUNCTION_EXISTS(floor HAVE_FLOOR)
CHECK_FUNCTION_EXISTS(getpt HAVE_GETPT)
CHECK_FUNCTION_EXISTS(grantpt UNIX98_PTY)
CHECK_FUNCTION_EXISTS(inotify_init HAVE_INOTIFY_INIT)
CHECK_FUNCTION_EXISTS(isastream HAVE_ISASTREAM)
CHECK_FUNCTION_EXISTS(kqueue HAVE_KQUEUE)
CHECK_FUNCTION_EXISTS(nanosleep HAVE_NANOSLEEP)
CHECK_FUNCTION_EXISTS(nl_langinfo HAVE_NL_LANGINFO)
CHECK_FUNCTION_EXISTS(openpty HAVE_OPENPTY)
CHECK_FUNCTION_EXISTS(poll HAVE_POLL)
CHECK_FUNCTION_EXISTS(port_create HAVE_PORT_CREATE)
CHECK_FUNCTION_EXISTS(posix_openpt HAVE_POSIX_OPENPT)
CHECK_FUNCTION_EXISTS(revoke HAVE_REVOKE)
CHECK_FUNCTION_EXISTS(select HAVE_SELECT)
CHECK_FUNCTION_EXISTS(seteuid HAVE_SETEUID)
CHECK_FUNCTION_EXISTS(setresuid HAVE_SETRESUID)
CHECK_FUNCTION_EXISTS(setreuid HAVE_SETREUID)
CHECK_FUNCTION_EXISTS(setuid HAVE_SETUID)
CHECK_FUNCTION_EXISTS(signalfd HAVE_SIGNALFD)
CHECK_FUNCTION_EXISTS(unsetenv HAVE_UNSETENV)
CHECK_FUNCTION_EXISTS(updlastlogx HAVE_UPDLASTLOGX)
CHECK_FUNCTION_EXISTS(updwtmp HAVE_UPDWTMP)
CHECK_FUNCTION_EXISTS(updwtmpx HAVE_UPDWTMPX)
CHECK_FUNCTION_EXISTS(xsetlocale HAVE_XSETLOCALE)

CHECK_SYMBOL_EXISTS(lastlog utmp.h HAVE_STRUCT_LASTLOG)
CHECK_SYMBOL_EXISTS(lastlogx utmpx.h HAVE_STRUCT_LASTLOGX)
CHECK_SYMBOL_EXISTS(utmp utmp.h HAVE_STRUCT_UTMP)
CHECK_SYMBOL_EXISTS(utmpx utmpx.h HAVE_STRUCT_UTMPX)
CHECK_SYMBOL_EXISTS(fpdass sys/socket.h HAVE_UNIX_FDPASS)

CHECK_STRUCT_HAS_MEMBER(utmpx ut_host utmpx.h HAVE_UTMPX_HOST)
CHECK_STRUCT_HAS_MEMBER(utmp ut_host utmp.h HAVE_UTMP_HOST)
CHECK_STRUCT_HAS_MEMBER(utmp pid utmp.h HAVE_UTMP_PID)

CONFIGURE_FILE(
  "${CMAKE_SOURCE_DIR}/config.h.cmake"
  "${CMAKE_SOURCE_DIR}/config.h"
)

INCLUDE_DIRECTORIES(
  "${GDKPIXBUF_INCLUDE_DIRS}"
  "${XFT_INCLUDE_DIRS}"
  "${FONTCONFIG_INCLUDE_DIRS}"
  "${STARTUP_NOTIFICATION_INCLUDE_DIRS}"

  "${CMAKE_SOURCE_DIR}"
  "${CMAKE_SOURCE_DIR}/src"
  "${CMAKE_SOURCE_DIR}/libev"
  "${CMAKE_SOURCE_DIR}/libptytty/src"
  "${CMAKE_SOURCE_DIR}/tinytoml/include"
)

ADD_SUBDIRECTORY(src)
